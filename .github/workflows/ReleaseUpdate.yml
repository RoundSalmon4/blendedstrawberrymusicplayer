name: Update Release Notes

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

permissions:
  contents: read  # Required to read the repository contents
  issues: write  # Required to edit issues
  pull-requests: write  # Required to edit pull requests
  releases: write  # Required to edit releases

jobs:
  update-release-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get all releases
        id: get_releases
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Set the GitHub token for authentication
        run: |
          releases=$(gh release list --json tagName --jq '.[].tagName')
          echo "RELEASES<<EOF" >> $GITHUB_ENV
          echo "$releases" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Update release notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure GH_TOKEN is set for this step as well
        run: |
          # Check if Changelog exists
          if [ ! -f Changelog ]; then
            echo "Changelog not found. Exiting."
            exit 1
          fi

          IFS=$'\n'  # Set the Internal Field Separator to newline
          for version in $RELEASES; do
            echo "Processing release: $version"

            # Read Changelog and extract release notes for the current version
            release_notes=$(awk -v version="$version" '
              BEGIN { found=0; }
              /^Version / {
                if (found) exit;  # Exit if we found the next version
                if ($2 == version) found=1;  # Check if the current line has the exact version
              }
              found { print; }  # Print lines if we are in the correct version section
            ' Changelog)

            # If no release notes are found, leave release_notes blank
            if [ -z "$release_notes" ]; then
              echo "No release notes found for version $version. Leaving release notes blank."
              release_notes=""  # Set release_notes to an empty string
            fi

            # Update the release with the extracted release notes
            gh release edit "$version" --notes "$release_notes"
            echo "Updated release $version with notes."
          done
