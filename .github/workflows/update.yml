name: Update from Upstream

on:
  schedule:
    - cron: '0 0 * * *'  # This runs the action every day at midnight UTC
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allow the workflow to write to the repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          repository: RoundSalmon4/test
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ./repo

      - name: Change directory to repo
        run: cd ./repo

      - name: Add upstream remote
        run: |
          cd ./repo
          git remote add upstream https://github.com/strawberrymusicplayer/strawberry || echo "Upstream remote already exists."

      - name: Fetch upstream changes
        run: |
          cd ./repo
          git fetch upstream

      - name: Check out master branch
        run: |
          cd ./repo
          git checkout master

      - name: Configure Git user
        run: |
          cd ./repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Create a temporary branch for merging
        run: |
          cd ./repo
          git checkout -b temp-merge

      - name: Merge upstream changes into temporary branch
        run: |
          cd ./repo
          git merge upstream/master --strategy-option=theirs --allow-unrelated-histories || echo "No changes to merge."

      - name: Reset workflow files if changed
        run: |
          cd ./repo
          git checkout HEAD -- .github/workflows

      - name: Checkout master branch again
        run: |
          cd ./repo
          git checkout master

      - name: Merge changes from temporary branch to master
        run: |
          cd ./repo
          git merge temp-merge --no-ff || echo "No changes to merge."

      - name: Push changes if any
        run: |
          cd ./repo
          git push origin master || echo "Push failed, no changes to push."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up temporary branch
        run: |
          cd ./repo
          git branch -d temp-merge
